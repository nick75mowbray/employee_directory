{"version":3,"sources":["components/Grid.js","components/Header.js","utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["Grid","userData","userRows","map","user","index","item","id","col1","name","first","col2","last","col3","phone","col4","email","pullData","rows","style","height","width","columns","field","headerName","useStyles","makeStyles","theme","root","flexGrow","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","spacing","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","handleSearch","classes","className","AppBar","Toolbar","Typography","variant","noWrap","InputBase","placeholder","input","inputProps","onChange","axios","get","App","useState","users","setUsers","filteredUsers","setFilteredUsers","useEffect","API","then","results","data","event","target","value","filteredList","filter","Object","values","join","toLowerCase","indexOf","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8b2f336.chunk.js","sourcesContent":["import React from 'react';\r\nimport { DataGrid, RowsProp, ColDef } from '@material-ui/data-grid';\r\n\r\n\r\n\r\nexport default function Grid({userData}) {\r\n\r\nlet userRows = []; \r\n\r\nif (userData){\r\n  \r\n  userRows = userData.map((user, index)=>{\r\n    return pullData(user, index);\r\n  })\r\n  \r\n}  //end of if statement  \r\n\r\n\r\nfunction pullData(item, index) {\r\n  const user = {\r\n    id: index, \r\n    col1: item.name.first, \r\n    col2: item.name.last,\r\n    col3: item.phone,\r\n    col4: item.email\r\n  };\r\n  return user;\r\n}\r\n\r\nconst rows: RowsProp = userRows;\r\n\r\nconst columns: ColDef[] = [\r\n  { field: 'col1', headerName: 'First Name', width: 100 },\r\n  { field: 'col2', headerName: 'Last Name', width: 130 },\r\n  { field: 'col3', headerName: 'Phone', width: 140 },\r\n  { field: 'col4', headerName: 'Email', width: 250 },\r\n];\r\n\r\n  return (\r\n    <div>\r\n\r\n    {userData ? \r\n      <div style={{ height: '90vh', width: '95vw' }}>\r\n        <DataGrid rows={rows} columns={columns} />\r\n      </div> \r\n      : <p>Oops...Something went wrong, try reloading</p>\r\n    }\r\n    \r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function SearchAppBar({handleSearch}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Employee Directory\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Searchâ€¦\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              onChange={handleSearch}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\n\nexport default {\n  // Gets all users\n  getUserData: function() {\n    return axios.get(\"https://randomuser.me/api/?results=50&nat=us\");\n  }\n};\n","import React, {useEffect, useState} from 'react';\nimport Grid from './components/Grid'; \nimport Header from './components/Header';\nimport API from './utils/API';\n\n\n\nexport default function App() {\n\n  const [users, setUsers] = useState([]);\n  \n  const [filteredUsers, setFilteredUsers] = useState([]);\n\n  // get employee data when page loads\n  useEffect(()=>{\n    API.getUserData().then(results=>{\n      setUsers(results.data.results);\n      setFilteredUsers(results.data.results);\n    })\n  },[]);\n\n const handleSearchChange = event => {\n    \n  // set search state\n    const search = event.target.value;\n\n    // filter employees\n    const filteredList = users.filter(item => {\n      let values = Object.values(item)\n        .join(\"\")\n        .toLowerCase();\n      return values.indexOf(search.toLowerCase()) !== -1;\n    });\n\n    // set state of filtered employees\n    setFilteredUsers(filteredList);\n\n  }\n\n  return (\n    <div>\n      <Header handleSearch={handleSearchChange}/>\n      <Grid userData={filteredUsers} name=\"Nick\"/>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}